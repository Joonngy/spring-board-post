<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JPA 연결 테스트" tests="4" skipped="0" failures="2" errors="0" timestamp="2025-04-08T12:26:40" hostname="Joongs-MacBook-Pro.local" time="0.49">
  <properties/>
  <testcase name="Insert Test" classname="com.blog.springboardpost.repository.JpaRepositoryTest" time="0.463"/>
  <testcase name="Select Test" classname="com.blog.springboardpost.repository.JpaRepositoryTest" time="0.014"/>
  <testcase name="Delete Test" classname="com.blog.springboardpost.repository.JpaRepositoryTest" time="0.007">
    <failure message="java.util.NoSuchElementException: No value present" type="java.util.NoSuchElementException">java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.orElseThrow(Optional.java:377)
	at com.blog.springboardpost.repository.JpaRepositoryTest.givenTestData_whenDeleting_thenWorksFine(JpaRepositoryTest.java:71)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="Update Test" classname="com.blog.springboardpost.repository.JpaRepositoryTest" time="0.003">
    <failure message="java.util.NoSuchElementException: No value present" type="java.util.NoSuchElementException">java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.orElseThrow(Optional.java:377)
	at com.blog.springboardpost.repository.JpaRepositoryTest.givenTestData_whenUpdating_thenWorksFine(JpaRepositoryTest.java:56)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <system-out><![CDATA[21:26:38.715 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.blog.springboardpost.repository.JpaRepositoryTest]: JpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
21:26:38.771 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.blog.springboardpost.SpringBoardPostApplication for test class com.blog.springboardpost.repository.JpaRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-04-08T21:26:38.962+09:00  INFO 50129 --- [    Test worker] c.b.s.repository.JpaRepositoryTest       : Starting JpaRepositoryTest using Java 17.0.13 with PID 50129 (started by jasonlee in /Users/jasonlee/JoongLee/Code/Java/FastCampus/spring-board-post)
2025-04-08T21:26:38.963+09:00 DEBUG 50129 --- [    Test worker] c.b.s.repository.JpaRepositoryTest       : Running with Spring Boot v3.4.1, Spring v6.2.1
2025-04-08T21:26:38.963+09:00  INFO 50129 --- [    Test worker] c.b.s.repository.JpaRepositoryTest       : No active profile set, falling back to 1 default profile: "default"
2025-04-08T21:26:39.103+09:00  INFO 50129 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-08T21:26:39.126+09:00  INFO 50129 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 2 JPA repository interfaces.
2025-04-08T21:26:39.148+09:00  INFO 50129 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-04-08T21:26:39.205+09:00  INFO 50129 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:dc150afb-6793-4b85-b523-26fbf34d9d14;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-04-08T21:26:39.307+09:00  INFO 50129 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-08T21:26:39.333+09:00  INFO 50129 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.4.Final
2025-04-08T21:26:39.347+09:00  INFO 50129 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-04-08T21:26:39.460+09:00  INFO 50129 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-08T21:26:39.496+09:00  INFO 50129 --- [    Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3866c96e']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-08T21:26:39.869+09:00  INFO 50129 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists article cascade 
Hibernate: 
    drop table if exists article_comment cascade 
Hibernate: 
    create table article (
        created_at timestamp(6),
        id bigint generated by default as identity,
        modified_at timestamp(6),
        created_by varchar(100),
        modified_by varchar(100),
        content varchar(10000) not null,
        hash_tag varchar(255),
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table article_comment (
        article_id bigint not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        modified_at timestamp(6) not null,
        content varchar(500) not null,
        created_by varchar(255) not null,
        modified_by varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create index IDX571gx7oqo5xpmgocegaidlcu9 
       on article (title)
Hibernate: 
    create index IDX6ak3iplk8l5gmrsrxp1hrod7x 
       on article (hash_tag)
Hibernate: 
    create index IDX7x74ia86nl2esnbqinok950pi 
       on article (created_at)
Hibernate: 
    create index IDX36724k3prapbiym6f0gkq2gf1 
       on article (created_by)
Hibernate: 
    create index IDXqu0inbk09l2sglvyjnvftwc2g 
       on article_comment (article_id)
Hibernate: 
    create index IDXpieqqnljv147sefofs56h25qx 
       on article_comment (content)
Hibernate: 
    alter table if exists article_comment 
       add constraint FKghmocqkgqs5tkmucf5putw64t 
       foreign key (article_id) 
       references article
2025-04-08T21:26:39.890+09:00  INFO 50129 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-08T21:26:40.011+09:00  INFO 50129 --- [    Test worker] c.b.s.repository.JpaRepositoryTest       : Started JpaRepositoryTest in 1.206 seconds (process running for 1.658)
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    insert 
    into
        article
        (content, created_at, created_by, hash_tag, modified_at, modified_by, title, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hash_tag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hash_tag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hash_tag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
